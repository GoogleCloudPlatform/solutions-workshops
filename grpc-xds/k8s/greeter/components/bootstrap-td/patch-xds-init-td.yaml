# Copyright 2023 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# Patch to add an init container that creates a gRPC xDS bootstrap config file,
# using Traffic Director as the xDS control plane.

apiVersion: apps/v1
kind: Deployment
metadata:
  name: greeter
spec:
  template:
    spec:
      containers:
      - name: app
        env:
        - name: GRPC_XDS_BOOTSTRAP
          value: /etc/grpc-xds/bootstrap.json
        volumeMounts:
        - name: grpc-xds-conf
          mountPath: /etc/grpc-xds
          readOnly: true
      initContainers:
      - name: grpc-xds-init
        image: td-grpc-bootstrap
        args:
        - -node-metadata
        - K8S_NAMESPACE=$(cat /etc/podinfo/namespace)
        - -node-metadata
        - K8S_POD=$(hostname -s)
        - -node-metadata
        - XDS_STREAM_TYPE=ADS
        - -output
        - /etc/grpc-xds/bootstrap.json
        - -vpc-network-name
        - default # kpt-set: ${vpc-network-name}
        resources:
          requests:
            cpu: 10m
            memory: 100Mi
        volumeMounts:
        - name: grpc-xds-conf
          mountPath: /etc/grpc-xds
        - name: podinfo
          mountPath: /etc/podinfo
          readOnly: true
      volumes:
      - name: grpc-xds-conf
        emptyDir: {}
      - name: podinfo
        downwardAPI:
          # Used when creating the xDS bootstrap file.
          items:
          - path: label-app-name
            fieldRef:
              fieldPath: metadata.labels['app.kubernetes.io/name']
          - path: namespace
            fieldRef:
              fieldPath: metadata.namespace
